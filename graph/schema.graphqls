type Link {
  id: ID!
  title: String!
  address: String!
  user: User!
}

type User {
  id: ID!
  name: String!
}

input NewLink {
  title: String!
  address: String!
}

input RefreshTokenInput{
  token: String!
}

input NewUser {
  username: String!
  password: String!
}

input Login {
  username: String!
  password: String!
}


input NewSong {
  id: ID # optional - new or update
  rfid: String
  url: String!
}

type Song {
  id: ID!
  rfid: String
  url: String
}


type Query {
  links: [Link!]!
  songs: [Song!]!
  song: Song!
}

type Mutation {
  createLink(input: NewLink!): Link!
  createUser(input: NewUser!): String!
  login(input: Login!): String!
  # we'll talk about this in authentication section
  refreshToken(input: RefreshTokenInput!): String!

  # Song mutations
  editSong(input: NewSong!): Song!
  deleteSong(input: ID!): Boolean!

  # Player
  playSong(input: Song!): Boolean!
  stopSong(): Boolean!
}